// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialize.proto

#ifndef PROTOBUF_serialize_2eproto__INCLUDED
#define PROTOBUF_serialize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mcserialize {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_serialize_2eproto();
void protobuf_AssignDesc_serialize_2eproto();
void protobuf_ShutdownFile_serialize_2eproto();

class LastNWords;
class WordFrequency;
class WordFrequency_Entry;
class Entry;
class NOrderChain;

// ===================================================================

class LastNWords : public ::google::protobuf::Message {
 public:
  LastNWords();
  virtual ~LastNWords();

  LastNWords(const LastNWords& from);

  inline LastNWords& operator=(const LastNWords& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastNWords& default_instance();

  void Swap(LastNWords* other);

  // implements Message ----------------------------------------------

  LastNWords* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastNWords& from);
  void MergeFrom(const LastNWords& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string word = 1;
  inline int word_size() const;
  inline void clear_word();
  static const int kWordFieldNumber = 1;
  inline const ::std::string& word(int index) const;
  inline ::std::string* mutable_word(int index);
  inline void set_word(int index, const ::std::string& value);
  inline void set_word(int index, const char* value);
  inline void set_word(int index, const char* value, size_t size);
  inline ::std::string* add_word();
  inline void add_word(const ::std::string& value);
  inline void add_word(const char* value);
  inline void add_word(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& word() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_word();

  // @@protoc_insertion_point(class_scope:mcserialize.LastNWords)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> word_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static LastNWords* default_instance_;
};
// -------------------------------------------------------------------

class WordFrequency_Entry : public ::google::protobuf::Message {
 public:
  WordFrequency_Entry();
  virtual ~WordFrequency_Entry();

  WordFrequency_Entry(const WordFrequency_Entry& from);

  inline WordFrequency_Entry& operator=(const WordFrequency_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WordFrequency_Entry& default_instance();

  void Swap(WordFrequency_Entry* other);

  // implements Message ----------------------------------------------

  WordFrequency_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WordFrequency_Entry& from);
  void MergeFrom(const WordFrequency_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required int64 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::int64 val() const;
  inline void set_val(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mcserialize.WordFrequency.Entry)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::google::protobuf::int64 val_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static WordFrequency_Entry* default_instance_;
};
// -------------------------------------------------------------------

class WordFrequency : public ::google::protobuf::Message {
 public:
  WordFrequency();
  virtual ~WordFrequency();

  WordFrequency(const WordFrequency& from);

  inline WordFrequency& operator=(const WordFrequency& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WordFrequency& default_instance();

  void Swap(WordFrequency* other);

  // implements Message ----------------------------------------------

  WordFrequency* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WordFrequency& from);
  void MergeFrom(const WordFrequency& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WordFrequency_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .mcserialize.WordFrequency.Entry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::mcserialize::WordFrequency_Entry& entry(int index) const;
  inline ::mcserialize::WordFrequency_Entry* mutable_entry(int index);
  inline ::mcserialize::WordFrequency_Entry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::mcserialize::WordFrequency_Entry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::mcserialize::WordFrequency_Entry >*
      mutable_entry();

  // @@protoc_insertion_point(class_scope:mcserialize.WordFrequency)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mcserialize::WordFrequency_Entry > entry_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static WordFrequency* default_instance_;
};
// -------------------------------------------------------------------

class Entry : public ::google::protobuf::Message {
 public:
  Entry();
  virtual ~Entry();

  Entry(const Entry& from);

  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entry& default_instance();

  void Swap(Entry* other);

  // implements Message ----------------------------------------------

  Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entry& from);
  void MergeFrom(const Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .mcserialize.LastNWords lastnwords = 1;
  inline bool has_lastnwords() const;
  inline void clear_lastnwords();
  static const int kLastnwordsFieldNumber = 1;
  inline const ::mcserialize::LastNWords& lastnwords() const;
  inline ::mcserialize::LastNWords* mutable_lastnwords();
  inline ::mcserialize::LastNWords* release_lastnwords();
  inline void set_allocated_lastnwords(::mcserialize::LastNWords* lastnwords);

  // required .mcserialize.WordFrequency word_frequency = 2;
  inline bool has_word_frequency() const;
  inline void clear_word_frequency();
  static const int kWordFrequencyFieldNumber = 2;
  inline const ::mcserialize::WordFrequency& word_frequency() const;
  inline ::mcserialize::WordFrequency* mutable_word_frequency();
  inline ::mcserialize::WordFrequency* release_word_frequency();
  inline void set_allocated_word_frequency(::mcserialize::WordFrequency* word_frequency);

  // @@protoc_insertion_point(class_scope:mcserialize.Entry)
 private:
  inline void set_has_lastnwords();
  inline void clear_has_lastnwords();
  inline void set_has_word_frequency();
  inline void clear_has_word_frequency();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::mcserialize::LastNWords* lastnwords_;
  ::mcserialize::WordFrequency* word_frequency_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Entry* default_instance_;
};
// -------------------------------------------------------------------

class NOrderChain : public ::google::protobuf::Message {
 public:
  NOrderChain();
  virtual ~NOrderChain();

  NOrderChain(const NOrderChain& from);

  inline NOrderChain& operator=(const NOrderChain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NOrderChain& default_instance();

  void Swap(NOrderChain* other);

  // implements Message ----------------------------------------------

  NOrderChain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NOrderChain& from);
  void MergeFrom(const NOrderChain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mcserialize.Entry entry = 1;
  inline int entry_size() const;
  inline void clear_entry();
  static const int kEntryFieldNumber = 1;
  inline const ::mcserialize::Entry& entry(int index) const;
  inline ::mcserialize::Entry* mutable_entry(int index);
  inline ::mcserialize::Entry* add_entry();
  inline const ::google::protobuf::RepeatedPtrField< ::mcserialize::Entry >&
      entry() const;
  inline ::google::protobuf::RepeatedPtrField< ::mcserialize::Entry >*
      mutable_entry();

  // required int32 order = 2;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 2;
  inline ::google::protobuf::int32 order() const;
  inline void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mcserialize.NOrderChain)
 private:
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mcserialize::Entry > entry_;
  ::google::protobuf::int32 order_;
  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static NOrderChain* default_instance_;
};
// ===================================================================


// ===================================================================

// LastNWords

// repeated string word = 1;
inline int LastNWords::word_size() const {
  return word_.size();
}
inline void LastNWords::clear_word() {
  word_.Clear();
}
inline const ::std::string& LastNWords::word(int index) const {
  // @@protoc_insertion_point(field_get:mcserialize.LastNWords.word)
  return word_.Get(index);
}
inline ::std::string* LastNWords::mutable_word(int index) {
  // @@protoc_insertion_point(field_mutable:mcserialize.LastNWords.word)
  return word_.Mutable(index);
}
inline void LastNWords::set_word(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mcserialize.LastNWords.word)
  word_.Mutable(index)->assign(value);
}
inline void LastNWords::set_word(int index, const char* value) {
  word_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mcserialize.LastNWords.word)
}
inline void LastNWords::set_word(int index, const char* value, size_t size) {
  word_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mcserialize.LastNWords.word)
}
inline ::std::string* LastNWords::add_word() {
  return word_.Add();
}
inline void LastNWords::add_word(const ::std::string& value) {
  word_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mcserialize.LastNWords.word)
}
inline void LastNWords::add_word(const char* value) {
  word_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mcserialize.LastNWords.word)
}
inline void LastNWords::add_word(const char* value, size_t size) {
  word_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mcserialize.LastNWords.word)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LastNWords::word() const {
  // @@protoc_insertion_point(field_list:mcserialize.LastNWords.word)
  return word_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LastNWords::mutable_word() {
  // @@protoc_insertion_point(field_mutable_list:mcserialize.LastNWords.word)
  return &word_;
}

// -------------------------------------------------------------------

// WordFrequency_Entry

// required string key = 1;
inline bool WordFrequency_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WordFrequency_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WordFrequency_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WordFrequency_Entry::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& WordFrequency_Entry::key() const {
  // @@protoc_insertion_point(field_get:mcserialize.WordFrequency.Entry.key)
  return *key_;
}
inline void WordFrequency_Entry::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:mcserialize.WordFrequency.Entry.key)
}
inline void WordFrequency_Entry::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:mcserialize.WordFrequency.Entry.key)
}
inline void WordFrequency_Entry::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mcserialize.WordFrequency.Entry.key)
}
inline ::std::string* WordFrequency_Entry::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:mcserialize.WordFrequency.Entry.key)
  return key_;
}
inline ::std::string* WordFrequency_Entry::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WordFrequency_Entry::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:mcserialize.WordFrequency.Entry.key)
}

// required int64 val = 2;
inline bool WordFrequency_Entry::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WordFrequency_Entry::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WordFrequency_Entry::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WordFrequency_Entry::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
  clear_has_val();
}
inline ::google::protobuf::int64 WordFrequency_Entry::val() const {
  // @@protoc_insertion_point(field_get:mcserialize.WordFrequency.Entry.val)
  return val_;
}
inline void WordFrequency_Entry::set_val(::google::protobuf::int64 value) {
  set_has_val();
  val_ = value;
  // @@protoc_insertion_point(field_set:mcserialize.WordFrequency.Entry.val)
}

// -------------------------------------------------------------------

// WordFrequency

// repeated .mcserialize.WordFrequency.Entry entry = 1;
inline int WordFrequency::entry_size() const {
  return entry_.size();
}
inline void WordFrequency::clear_entry() {
  entry_.Clear();
}
inline const ::mcserialize::WordFrequency_Entry& WordFrequency::entry(int index) const {
  // @@protoc_insertion_point(field_get:mcserialize.WordFrequency.entry)
  return entry_.Get(index);
}
inline ::mcserialize::WordFrequency_Entry* WordFrequency::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:mcserialize.WordFrequency.entry)
  return entry_.Mutable(index);
}
inline ::mcserialize::WordFrequency_Entry* WordFrequency::add_entry() {
  // @@protoc_insertion_point(field_add:mcserialize.WordFrequency.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mcserialize::WordFrequency_Entry >&
WordFrequency::entry() const {
  // @@protoc_insertion_point(field_list:mcserialize.WordFrequency.entry)
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::mcserialize::WordFrequency_Entry >*
WordFrequency::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:mcserialize.WordFrequency.entry)
  return &entry_;
}

// -------------------------------------------------------------------

// Entry

// required .mcserialize.LastNWords lastnwords = 1;
inline bool Entry::has_lastnwords() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entry::set_has_lastnwords() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entry::clear_has_lastnwords() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entry::clear_lastnwords() {
  if (lastnwords_ != NULL) lastnwords_->::mcserialize::LastNWords::Clear();
  clear_has_lastnwords();
}
inline const ::mcserialize::LastNWords& Entry::lastnwords() const {
  // @@protoc_insertion_point(field_get:mcserialize.Entry.lastnwords)
  return lastnwords_ != NULL ? *lastnwords_ : *default_instance_->lastnwords_;
}
inline ::mcserialize::LastNWords* Entry::mutable_lastnwords() {
  set_has_lastnwords();
  if (lastnwords_ == NULL) lastnwords_ = new ::mcserialize::LastNWords;
  // @@protoc_insertion_point(field_mutable:mcserialize.Entry.lastnwords)
  return lastnwords_;
}
inline ::mcserialize::LastNWords* Entry::release_lastnwords() {
  clear_has_lastnwords();
  ::mcserialize::LastNWords* temp = lastnwords_;
  lastnwords_ = NULL;
  return temp;
}
inline void Entry::set_allocated_lastnwords(::mcserialize::LastNWords* lastnwords) {
  delete lastnwords_;
  lastnwords_ = lastnwords;
  if (lastnwords) {
    set_has_lastnwords();
  } else {
    clear_has_lastnwords();
  }
  // @@protoc_insertion_point(field_set_allocated:mcserialize.Entry.lastnwords)
}

// required .mcserialize.WordFrequency word_frequency = 2;
inline bool Entry::has_word_frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entry::set_has_word_frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entry::clear_has_word_frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entry::clear_word_frequency() {
  if (word_frequency_ != NULL) word_frequency_->::mcserialize::WordFrequency::Clear();
  clear_has_word_frequency();
}
inline const ::mcserialize::WordFrequency& Entry::word_frequency() const {
  // @@protoc_insertion_point(field_get:mcserialize.Entry.word_frequency)
  return word_frequency_ != NULL ? *word_frequency_ : *default_instance_->word_frequency_;
}
inline ::mcserialize::WordFrequency* Entry::mutable_word_frequency() {
  set_has_word_frequency();
  if (word_frequency_ == NULL) word_frequency_ = new ::mcserialize::WordFrequency;
  // @@protoc_insertion_point(field_mutable:mcserialize.Entry.word_frequency)
  return word_frequency_;
}
inline ::mcserialize::WordFrequency* Entry::release_word_frequency() {
  clear_has_word_frequency();
  ::mcserialize::WordFrequency* temp = word_frequency_;
  word_frequency_ = NULL;
  return temp;
}
inline void Entry::set_allocated_word_frequency(::mcserialize::WordFrequency* word_frequency) {
  delete word_frequency_;
  word_frequency_ = word_frequency;
  if (word_frequency) {
    set_has_word_frequency();
  } else {
    clear_has_word_frequency();
  }
  // @@protoc_insertion_point(field_set_allocated:mcserialize.Entry.word_frequency)
}

// -------------------------------------------------------------------

// NOrderChain

// repeated .mcserialize.Entry entry = 1;
inline int NOrderChain::entry_size() const {
  return entry_.size();
}
inline void NOrderChain::clear_entry() {
  entry_.Clear();
}
inline const ::mcserialize::Entry& NOrderChain::entry(int index) const {
  // @@protoc_insertion_point(field_get:mcserialize.NOrderChain.entry)
  return entry_.Get(index);
}
inline ::mcserialize::Entry* NOrderChain::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:mcserialize.NOrderChain.entry)
  return entry_.Mutable(index);
}
inline ::mcserialize::Entry* NOrderChain::add_entry() {
  // @@protoc_insertion_point(field_add:mcserialize.NOrderChain.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::mcserialize::Entry >&
NOrderChain::entry() const {
  // @@protoc_insertion_point(field_list:mcserialize.NOrderChain.entry)
  return entry_;
}
inline ::google::protobuf::RepeatedPtrField< ::mcserialize::Entry >*
NOrderChain::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:mcserialize.NOrderChain.entry)
  return &entry_;
}

// required int32 order = 2;
inline bool NOrderChain::has_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NOrderChain::set_has_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NOrderChain::clear_has_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NOrderChain::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 NOrderChain::order() const {
  // @@protoc_insertion_point(field_get:mcserialize.NOrderChain.order)
  return order_;
}
inline void NOrderChain::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:mcserialize.NOrderChain.order)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mcserialize

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serialize_2eproto__INCLUDED
